<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.18</version>
		<relativePath />
		<!-- lookup parent from repository -->
	</parent>

	<groupId>it.finanze.sanita.fse2</groupId>
	<artifactId>gtw-fhir-mapping-engine-ms</artifactId>
	<version>0.3.0-RELEASE</version>
	<name>gtw-fhir-mapping-engine-ms</name>
	<description>FSE Gateway Fhir Mapping engine</description>

	<properties>
		<!-- Application -->
		<java.version>21</java.version>
		<spring-cloud.version>2021.0.1</spring-cloud.version>
		<start-class>it.finanze.sanita.fse2.gtwfhirmappingenginems.GtwFhirMappingEngineMsApplication</start-class>
		<!-- Build -->
		<config.infra>${project.basedir}/infrastructure</config.infra>
		<container.output>target/container</container.output>
		<container.output.runtime>${container.output}/runtime</container.output.runtime>
		<!-- Sonar integration -->
		<sonar.organization>ministero-salute</sonar.organization>
		<sonar.host.url>https://sonarcloud.io</sonar.host.url>
		<sonar.exclusions>
			src/main/java/it/finanze/sanita/fse2/ms/gtwfhirmappingenginems/config/**/*.*
		</sonar.exclusions>
		<logback.version>1.2.13</logback.version>
	</properties>

	<dependencies> 
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.yaml</groupId>
					<artifactId>snakeyaml</artifactId>
				</exclusion>
			</exclusions>
		</dependency>


		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
		</dependency>


		<!-- MONGODB -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-mongodb</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongodb-driver-sync</artifactId>
			<version>5.2.1</version>
		</dependency>
		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongodb-driver-core</artifactId>
			<version>5.2.1</version>
		</dependency>
		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>bson</artifactId>
			<version>5.2.1</version>
		</dependency>
		<!-- DEVTOOL -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- TRACING -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-sleuth</artifactId>
		</dependency>

		<!-- LOGBACK JSON -->
		<dependency>
			<groupId>ch.qos.logback.contrib</groupId>
			<artifactId>logback-json-classic</artifactId>
			<version>0.1.5</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback.contrib</groupId>
			<artifactId>logback-jackson</artifactId>
			<version>0.1.5</version>
		</dependency>

		<!-- ACTUATOR -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- RESILIENCE -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-circuitbreaker-resilience4j</artifactId>
		</dependency>

		<!-- OPENAPI-UI -->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-ui</artifactId>
			<version>1.6.11</version>
			<exclusions>
				<exclusion>
					<groupId>org.yaml</groupId>
					<artifactId>snakeyaml</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- JSOUP -->
		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>1.15.3</version>
		</dependency>

		<!-- MATCHBOX -->
		<!-- https://mvnrepository.com/artifact/health.matchbox/matchbox-engine -->
		<dependency>
		    <groupId>health.matchbox</groupId>
		    <artifactId>matchbox-engine</artifactId>
		    <version>3.2.2</version>
		</dependency>

		<!-- FHIR -->
	    <dependency>
		      <groupId>ca.uhn.hapi.fhir</groupId>
		      <artifactId>org.hl7.fhir.validation</artifactId>
				<version>5.6.971</version>				
	    </dependency>

		
		<!-- SHEDLOCK -->
		<dependency>
			<groupId>net.javacrumbs.shedlock</groupId>
			<artifactId>shedlock-spring</artifactId>
			<version>4.42.0</version>
		</dependency>
		<dependency>
			<groupId>net.javacrumbs.shedlock</groupId>
			<artifactId>shedlock-provider-mongo</artifactId>
			<version>4.42.0</version>
		</dependency>
		<!-- TEST -->
		<dependency>
			<groupId>org.awaitility</groupId>
			<artifactId>awaitility</artifactId>
			<version>4.2.0</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>2.13.5</version>
				<scope>compile</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
 
	<build>
		<finalName>${project.artifactId}</finalName>

		<plugins>

			<plugin>
			  <groupId>org.springframework.boot</groupId>
			  <artifactId>spring-boot-maven-plugin</artifactId>
			  <configuration>
			    <includeSystemScope>true</includeSystemScope>
			  </configuration>
			</plugin> 
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<!-- Coverage -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.11</version>
				<configuration>
					<excludes>
						<exclude>src/main/java/it/finanze/sanita/fse2/ms/gtw/fhirmapping/dto/**/*.*</exclude>
						<exclude>src/main/java/it/finanze/sanita/fse2/ms/gtw/fhirmapping/utility/**/*.*</exclude>
						<exclude>src/main/java/it/finanze/sanita/fse2/ms/gtw/fhirmapping/config/**/*.*</exclude>
						<exclude>src/main/java/it/finanze/sanita/fse2/ms/gtw/fhirmapping/repository/**/*.*</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<!-- attached to Maven test phase -->
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Security check -->
			<plugin>
				<groupId>org.owasp</groupId>
				<artifactId>dependency-check-maven</artifactId>
				<version>7.1.2</version>
				<executions>
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Build -->
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<dependencies>
					<dependency>
						<groupId>ant-contrib</groupId>
						<artifactId>ant-contrib</artifactId>
						<version>1.0b3</version>
					</dependency>
					<dependency>
						<groupId>ant</groupId>
						<artifactId>ant</artifactId>
						<version>1.7.0</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>copy-resources-to-container</id>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<taskdef
									resource="net/sf/antcontrib/antcontrib.properties" />
								<if>
									<available file="infrastructure" />
									<then>
										<!-- copy common resources of server runtime to project build directory -->
										<copy todir="${container.output.runtime}"
											overwrite="true" failonerror="false">
											<fileset dir="${config.infra}/runtime" includes="**" />
										</copy>
										<!-- copy common resources of server runtime to project build directory -->
										<copy todir="${container.output}" overwrite="true"
											failonerror="false">
											<fileset dir="${project.basedir}"
												includes="Dockerfile" />
										</copy>
										<!-- copy common resources of server runtime to project build directory -->
										<copy todir="${container.output}" overwrite="true"
											failonerror="false">
											<fileset dir="${project.basedir}/target"
												includes="${project.artifactId}.jar" />
										</copy>
									</then>
								</if>
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>

	</build>
</project>
